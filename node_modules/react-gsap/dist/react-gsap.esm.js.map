{"version":3,"file":"react-gsap.esm.js","sources":["../src/types.ts","../src/helper.ts","../src/Provider.tsx","../src/plugins/PlugInSvgDraw.ts","../src/plugins/PlugInCount.ts","../src/Tween.tsx","../src/Timeline.tsx","../src/tools/Reveal.tsx","../src/tools/SplitText.tsx","../src/tools/Controls.tsx"],"sourcesContent":["export enum PlayState {\n  play = 'play',\n  reverse = 'reverse',\n  stop = 'stop',\n  pause = 'pause',\n}\n","import { gsap } from 'gsap';\nimport { PlayState } from './types';\n\nconst setPlayState = (\n  playState?: PlayState,\n  prevPlayState?: PlayState | null,\n  tween: any = null\n) => {\n  if (tween && playState && playState !== prevPlayState) {\n    if (playState === PlayState.play) {\n      if (prevPlayState === PlayState.pause || prevPlayState === PlayState.reverse) {\n        tween.play();\n      } else {\n        tween.restart(true);\n      }\n    } else if (playState === PlayState.reverse) {\n      if (prevPlayState === PlayState.pause || prevPlayState === PlayState.play) {\n        tween.reverse();\n      } else {\n        tween.reverse(0);\n      }\n    } else if (playState === PlayState.stop) {\n      tween.pause(0);\n    } else if (playState === PlayState.pause) {\n      tween.pause();\n    }\n  }\n};\n\nconst getTweenFunction = (targets: any, props: any): gsap.core.Tween | gsap.core.Timeline => {\n  const {\n    children,\n    wrapper,\n\n    duration = 1,\n    from,\n    to,\n\n    stagger,\n\n    progress,\n    totalProgress,\n    playState,\n    disabled,\n    onlyInvalidateTo,\n\n    onCompleteAll,\n    onCompleteAllParams,\n    onCompleteAllScope,\n    onStartAll,\n\n    position,\n    target,\n\n    ...vars\n  } = props;\n\n  let tweenFunction: gsap.core.Tween | gsap.core.Timeline;\n\n  if (from && to) {\n    tweenFunction = gsap.fromTo(targets, from, { stagger, duration, ...to, ...vars });\n  } else if (to) {\n    tweenFunction = gsap.to(targets, { stagger, duration, ...to, ...vars });\n  } else {\n    tweenFunction = gsap.from(targets, { stagger, duration, ...from, ...vars });\n  }\n\n  // if multiple tweens (stagger), wrap them in a timeline\n  // TODO: if it's already an timeline add event handlers\n  if (Array.isArray(tweenFunction)) {\n    tweenFunction.forEach(t => {\n      t.paused(false);\n    });\n    tweenFunction = gsap.timeline({\n      ...vars,\n      tweens: tweenFunction,\n      smoothChildTiming: true,\n      onComplete: onCompleteAll,\n      onCompleteParams: onCompleteAllParams,\n      onCompleteScope: onCompleteAllScope,\n      onStart: onStartAll,\n    });\n  }\n\n  // props at mount\n  if (progress) {\n    tweenFunction.progress(progress);\n  }\n  if (totalProgress) {\n    tweenFunction.totalProgress(totalProgress);\n  }\n  if (playState) {\n    setPlayState(playState, null, tweenFunction);\n  }\n\n  return tweenFunction;\n};\n\nconst callTweenFunction = (\n  tweenFunction: any,\n  functionName: string,\n  params: Array<any> | undefined = undefined,\n  returnFunction: string | undefined = undefined\n): void => {\n  if (Array.isArray(tweenFunction)) {\n    tweenFunction.forEach(tween => {\n      if (!params && returnFunction) {\n        params = [tween[returnFunction].apply(tween)];\n      }\n      tween[functionName].apply(tween, params);\n    });\n  } else {\n    if (!params && returnFunction) {\n      params = [tweenFunction[returnFunction].apply(tweenFunction)];\n    }\n    tweenFunction[functionName].apply(tweenFunction, params);\n  }\n};\n\nconst isEqual = (obj1: any, obj2: any) => {\n  // very easy equal check\n  // attention: if the order of properties are different it returns false\n  return JSON.stringify(obj1) === JSON.stringify(obj2);\n};\n\nconst refOrInnerRef = (child: any) => {\n  if (child.type.$$typeof && child.type.$$typeof.toString() === 'Symbol(react.forward_ref)') {\n    return 'ref';\n  }\n\n  // styled-components < 4\n  if (child.type.styledComponentId) {\n    return 'innerRef';\n  }\n\n  return 'ref';\n};\n\nconst nullishCoalescing = <T, R>(value: T, ifNullish: R): T | R => {\n  if (value === null || typeof value === 'undefined') {\n    return ifNullish;\n  }\n  return value;\n};\n\nexport {\n  getTweenFunction,\n  callTweenFunction,\n  setPlayState,\n  isEqual,\n  refOrInnerRef,\n  nullishCoalescing,\n};\n","import React from 'react';\n\nexport type ContextProps = {\n  registerConsumer: (consumer: any) => void;\n};\n\nexport const Context = React.createContext<ContextProps>({ registerConsumer: () => {} });\n\nabstract class Provider<T, S = {}> extends React.Component<T, S> {\n  consumers: any[];\n\n  constructor(props: T) {\n    super(props);\n    this.consumers = [];\n\n    this.registerConsumer = this.registerConsumer.bind(this);\n    this.getContextValue = this.getContextValue.bind(this);\n    this.renderWithProvider = this.renderWithProvider.bind(this);\n  }\n\n  registerConsumer(consumer: any) {\n    this.consumers.push(consumer);\n  }\n\n  getContextValue() {\n    return {\n      registerConsumer: this.registerConsumer,\n    };\n  }\n\n  renderWithProvider(output: any) {\n    return <Context.Provider value={this.getContextValue()}>{output}</Context.Provider>;\n  }\n}\n\nexport default Provider;\n","import { nullishCoalescing } from '../helper';\n\nlet gsap: any;\nlet _interpolate: any;\nlet _getProp: any;\nconst _getGSAP = () =>\n  gsap || (typeof window !== 'undefined' && (gsap = window.gsap) && gsap.registerPlugin && gsap);\n\ntype Point = {\n  x: number;\n  y: number;\n};\n\nfunction getDistance(p1: DOMPoint | Point, p2: DOMPoint | Point) {\n  return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\n}\n\nfunction getCircleLength(el: SVGCircleElement) {\n  return 2 * Math.PI * parseFloat(nullishCoalescing(el.getAttribute('r'), '1'));\n}\n\nfunction getRectLength(el: SVGRectElement) {\n  return (\n    parseFloat(nullishCoalescing(el.getAttribute('width'), '1')) * 2 +\n    parseFloat(nullishCoalescing(el.getAttribute('height'), '1')) * 2\n  );\n}\n\nfunction getLineLength(el: SVGLineElement) {\n  return getDistance(\n    {\n      x: parseFloat(nullishCoalescing(el.getAttribute('x1'), '1')),\n      y: parseFloat(nullishCoalescing(el.getAttribute('y1'), '1')),\n    },\n    {\n      x: parseFloat(nullishCoalescing(el.getAttribute('x2'), '1')),\n      y: parseFloat(nullishCoalescing(el.getAttribute('y2'), '1')),\n    }\n  );\n}\n\nfunction getPolylineLength(el: SVGPolylineElement) {\n  const points = el.points;\n  let totalLength = 0;\n  let previousPos: DOMPoint | undefined = undefined;\n  for (let i = 0; i < points.numberOfItems; i++) {\n    const currentPos = points.getItem(i);\n    if (previousPos) totalLength += getDistance(previousPos, currentPos);\n    previousPos = currentPos;\n  }\n  return totalLength;\n}\n\nfunction getPolygonLength(el: SVGPolylineElement) {\n  const points = el.points;\n  return (\n    getPolylineLength(el) + getDistance(points.getItem(points.numberOfItems - 1), points.getItem(0))\n  );\n}\n\n// if path is splitted into multiple move commands then return longest path\nfunction getPathLength(el: SVGPathElement) {\n  if (!el.hasAttribute('d')) {\n    return el.getTotalLength();\n  }\n  const d = el.getAttribute('d');\n  const pathString = d ? d.replace(/m/gi, 'M') : null;\n\n  if (!pathString) {\n    return el.getTotalLength();\n  }\n\n  const paths = pathString\n    .split('M')\n    .filter(path => path !== '')\n    .map(path => `M${path}`);\n\n  if (paths.length === 1) {\n    return el.getTotalLength();\n  }\n\n  let maxLength = 0;\n\n  paths.forEach(path => {\n    const pathElement = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    pathElement.setAttribute('d', path);\n    maxLength = Math.max(maxLength, pathElement.getTotalLength());\n  });\n\n  return maxLength;\n}\n\nfunction getTotalLength(el: any) {\n  if (el.getTotalLength) {\n    return getPathLength(el);\n  }\n  switch (el.tagName.toLowerCase()) {\n    case 'circle':\n      return getCircleLength(el);\n    case 'rect':\n      return getRectLength(el);\n    case 'line':\n      return getLineLength(el);\n    case 'polyline':\n      return getPolylineLength(el);\n    case 'polygon':\n      return getPolygonLength(el);\n    default:\n      return 0;\n  }\n}\n\nexport const SvgDrawPlugin = {\n  version: '2.0.0',\n  name: 'svgDraw',\n  register(core: any, Plugin: any, propTween: any) {\n    gsap = core;\n    _interpolate = gsap.utils.interpolate;\n    _getProp = gsap.getProperty;\n  },\n  init(target: any, value: number, _tween: any, index: number, targets: any) {\n    const length = getTotalLength(target);\n\n    let lengthParam = value;\n    let offsetParam = 0;\n\n    if (Array.isArray(value)) {\n      lengthParam = value[0];\n      if (value.length >= 2) {\n        offsetParam = value[1] * -1;\n      }\n    }\n\n    let data = this;\n    data.target = target;\n    data.strokeDashoffset = _interpolate(\n      _getProp(target, 'stroke-dashoffset'),\n      length * offsetParam\n    );\n    data.strokeDasharray = _interpolate(_getProp(target, 'stroke-dasharray'), [\n      lengthParam * length,\n      length,\n    ]);\n  },\n  render(progress: number, data: any) {\n    data.target.setAttribute('stroke-dashoffset', data.strokeDashoffset(progress));\n    data.target.setAttribute('stroke-dasharray', data.strokeDasharray(progress));\n  },\n};\n\n_getGSAP() && gsap.registerPlugin(SvgDrawPlugin);\n\nexport { SvgDrawPlugin as default };\n","import { nullishCoalescing } from '../helper';\n\nlet gsap: any;\nlet _interpolate: any;\nlet _format: any;\nconst _getGSAP = () =>\n  gsap || (typeof window !== 'undefined' && (gsap = window.gsap) && gsap.registerPlugin && gsap);\n\ntype Prop =\n  | {\n      value: string | number;\n      format: () => (value: string | number) => number | string;\n    }\n  | number\n  | string;\n\nexport const CountPlugin = {\n  version: '1.0.0',\n  name: 'count',\n  register(core: any, Plugin: any, propTween: any) {\n    gsap = core;\n    _interpolate = gsap.utils.interpolate;\n    _format = (value: string | number) => parseInt(value.toString(), 10);\n  },\n  init(target: any, value: Prop, _tween: any, index: number, targets: any) {\n    let inputValue = value;\n    let format = _format;\n    if (typeof value === 'object') {\n      inputValue = nullishCoalescing(value.value, 0);\n      if (value.format) {\n        format = value.format;\n      }\n    }\n\n    const initialCount = parseFloat(target.innerText);\n\n    let data = this;\n    data.target = target;\n    data.count = _interpolate(initialCount, parseFloat(inputValue.toString()));\n    data.format = format;\n  },\n  render(progress: number, data: any) {\n    data.target.innerText = data.format(data.count(progress));\n  },\n};\n\n_getGSAP() && gsap.registerPlugin(CountPlugin);\n\nexport { CountPlugin as default };\n","import React, { Fragment } from 'react';\nimport { gsap } from 'gsap';\nimport { PlayState } from './types';\nimport { getTweenFunction, setPlayState, isEqual, refOrInnerRef } from './helper';\nimport { Context } from './Provider';\n\n// import { CSSPlugin } from 'gsap/dist/CSSPlugin'; // CSSPlugin not exported as ES5?\nimport SvgDrawPlugin from './plugins/PlugInSvgDraw';\nimport CountPlugin from './plugins/PlugInCount';\n\n// gsap.registerPlugin(CSSPlugin);\ngsap.registerPlugin(SvgDrawPlugin);\ngsap.registerPlugin(CountPlugin);\n\ntype StaggerFunction = (index: number, target: any, list: any) => number;\ntype StaggerFromValues = 'start' | 'center' | 'edges' | 'random' | 'end';\ntype EaseFunction = (value: number) => number;\n\nexport type Stagger =\n  | {\n      amount?: number;\n      each?: number;\n      from?: StaggerFromValues | number | [number, number];\n      grid?: [number, number] | 'auto';\n      axis?: 'x' | 'y';\n      ease?: string | EaseFunction;\n      repeat?: number;\n      yoyo?: boolean;\n      [prop: string]: any;\n    }\n  | number\n  | StaggerFunction;\n\nexport type TweenProps = {\n  /** One or multiple \"refable\" components  */\n  children?: React.ReactNode;\n  wrapper?: React.ReactElement;\n  target?: number | string;\n  position?: string | number;\n\n  from?: any;\n  to?: any;\n  stagger?: Stagger;\n\n  duration?: number;\n  progress?: number;\n  totalProgress?: number;\n  playState?: PlayState;\n\n  disabled?: boolean;\n  onlyInvalidateTo?: boolean;\n\n  [prop: string]: any;\n};\n\nclass Tween extends React.Component<TweenProps, {}> {\n  static displayName = 'Tween';\n  static contextType = Context;\n\n  tween: any;\n  targets: any[] = [];\n\n  setPlayState(playState: PlayState) {\n    const { playState: previousPlayState } = this.props;\n    setPlayState(playState, previousPlayState, this.tween);\n  }\n\n  componentDidMount() {\n    this.createTween();\n  }\n\n  componentWillUnmount() {\n    if (this.tween) {\n      this.tween.kill();\n    }\n  }\n\n  getSnapshotBeforeUpdate() {\n    this.targets = [];\n    return null;\n  }\n\n  componentDidUpdate(prevProps: TweenProps) {\n    const {\n      children,\n      wrapper,\n\n      duration,\n      from,\n      to,\n      stagger,\n\n      progress,\n      totalProgress,\n      playState,\n      disabled,\n      onlyInvalidateTo,\n\n      onCompleteAll,\n      onCompleteAllParams,\n      onCompleteAllScope,\n      onStartAll,\n\n      position,\n      target,\n\n      ...vars\n    } = this.props;\n\n    // if children change create a new tween\n    // TODO: replace easy length check with fast equal check\n    if (React.Children.count(prevProps.children) !== React.Children.count(children)) {\n      this.createTween();\n    }\n\n    if (disabled) {\n      return;\n    }\n\n    // execute function calls\n    if (progress !== prevProps.progress) {\n      this.tween.progress(progress);\n    }\n    if (totalProgress !== prevProps.totalProgress) {\n      this.tween.totalProgress(totalProgress);\n    }\n    if (duration !== prevProps.duration) {\n      this.tween.duration(duration);\n    }\n    // if \"to\" props are changed: reinit and restart tween\n    if (!isEqual(to, prevProps.to)) {\n      // is Tween\n      if (!this.tween.getChildren) {\n        this.tween.vars = { ...to, ...vars };\n\n        if (onlyInvalidateTo) {\n          var progressTmp = this.tween.progress();\n          this.tween\n            .progress(0)\n            .invalidate()\n            .progress(progressTmp);\n        } else {\n          this.tween.invalidate();\n        }\n      }\n      // is Timeline\n      // TODO: not yet ready\n      else {\n        let delay = 0;\n        this.tween.getChildren(false, true, false).forEach((tween: any) => {\n          tween.vars = { ...to, ...vars, ...{ delay } };\n          tween.invalidate();\n          // delay += stagger || 0;\n        });\n      }\n\n      if (!this.tween.paused()) {\n        this.tween.restart();\n      }\n    }\n\n    setPlayState(playState, prevProps.playState, this.tween);\n  }\n\n  createTween() {\n    if (this.tween) {\n      this.tween.kill();\n    }\n\n    if (this.props.children) {\n      this.tween = getTweenFunction(this.targets, this.props);\n    } else {\n      // why this is needed?\n      this.tween = () => {};\n    }\n\n    this.context.registerConsumer(this);\n  }\n\n  getGSAP() {\n    return this.tween;\n  }\n\n  setGSAP(tween: any) {\n    this.tween = tween;\n  }\n\n  addTarget(target: any) {\n    // target is null at unmount\n    if (target !== null) {\n      this.targets.push(target);\n    }\n  }\n\n  getTargets() {\n    return this.targets;\n  }\n\n  render() {\n    let { children, wrapper } = this.props;\n\n    const output = (\n      <Fragment>\n        {React.Children.map(children, child =>\n          React.cloneElement(child as any, {\n            [refOrInnerRef(child)]: (target: any) => this.addTarget(target),\n          })\n        )}\n      </Fragment>\n    );\n\n    if (wrapper) {\n      return React.cloneElement(wrapper, [], output);\n    }\n\n    return output;\n  }\n}\n\nexport default Tween;\n","import React, { Fragment, ReactNode, ReactElement, forwardRef } from 'react';\nimport { gsap } from 'gsap';\nimport { isForwardRef, isFragment } from 'react-is';\nimport { PlayState } from './types';\nimport { getTweenFunction, setPlayState, refOrInnerRef, nullishCoalescing } from './helper';\nimport Provider, { Context } from './Provider';\nimport { TweenProps } from './Tween';\n\ntype Label = {\n  label: string;\n  position: string | number;\n};\n\nexport type Targets = Map<string | number, ReactElement | ReactElement[]>;\nexport type TargetsRef = {\n  set: (key: string, target: any) => void;\n};\n\nexport type Target = ReactElement | null;\n\nexport type TimelineProps = {\n  children: ReactNode;\n  wrapper?: ReactElement;\n  target?: Target;\n  position?: string | number;\n  labels?: Label[];\n\n  duration?: number;\n  progress?: number;\n  totalProgress?: number;\n  playState?: PlayState;\n\n  [prop: string]: any;\n};\n\nclass Timeline extends Provider<TimelineProps> {\n  static displayName = 'Timeline';\n  static contextType = Context;\n\n  timeline: any;\n  targets: Targets = new Map();\n\n  constructor(props: TimelineProps) {\n    super(props);\n\n    this.setTarget = this.setTarget.bind(this);\n  }\n\n  setPlayState(playState: PlayState) {\n    const { playState: previousPlayState } = this.props;\n    setPlayState(playState, previousPlayState, this.timeline);\n  }\n\n  componentDidMount() {\n    this.createTimeline();\n  }\n\n  componentWillUnmount() {\n    this.timeline.kill();\n  }\n\n  getSnapshotBeforeUpdate() {\n    this.targets = new Map();\n    return null;\n  }\n\n  componentDidUpdate(prevProps: TimelineProps) {\n    const { children, duration, progress, totalProgress, playState } = this.props;\n\n    // if children change create a new timeline\n    // TODO: replace easy length check with fast equal check\n    // TODO: same for props.target?\n    if (React.Children.count(prevProps.children) !== React.Children.count(children)) {\n      this.createTimeline();\n    }\n\n    // execute function calls\n    if (progress !== prevProps.progress) {\n      this.timeline.progress(progress);\n    }\n    if (totalProgress !== prevProps.totalProgress) {\n      this.timeline.totalProgress(totalProgress);\n    }\n    if (duration !== prevProps.duration) {\n      this.timeline.duration(duration);\n    }\n\n    setPlayState(playState, prevProps.playState, this.timeline);\n  }\n\n  createTimeline() {\n    const {\n      children,\n      target,\n      duration,\n      progress,\n      totalProgress,\n      playState,\n      labels,\n      position,\n      ...vars\n    } = this.props;\n\n    if (this.timeline) {\n      this.timeline.kill();\n    }\n\n    // init timeline\n    this.timeline = gsap.timeline({\n      smoothChildTiming: true,\n      ...vars,\n    });\n\n    if (labels) {\n      labels.forEach(label => {\n        this.timeline.addLabel(label.label, label.position);\n      });\n    }\n\n    // add tweens or nested timelines to timeline\n    this.consumers.forEach(consumer => {\n      if (consumer.tween && !consumer.props.children) {\n        const { position, target, stagger, ...vars } = consumer.props as TweenProps;\n\n        // get target if not nullish\n        let targets = null;\n        if (target !== null && typeof target !== 'undefined') {\n          targets = this.targets.get(target);\n        }\n\n        const tween = getTweenFunction(\n          // @ts-ignore\n          nullishCoalescing(targets, Array.from(this.targets.values())),\n          {\n            stagger,\n            ...vars,\n          }\n        );\n        this.timeline.add(tween, nullishCoalescing(position, '+=0'));\n        consumer.setGSAP(tween);\n      } else {\n        const { position } = consumer.props;\n        this.timeline.add(consumer.getGSAP(), nullishCoalescing(position, '+=0'));\n      }\n    });\n\n    // props at mount\n    if (duration) {\n      this.timeline.duration(duration);\n    }\n    if (progress) {\n      this.timeline.progress(progress);\n    }\n    if (totalProgress) {\n      this.timeline.totalProgress(totalProgress);\n    }\n    if (playState) {\n      this.setPlayState(playState);\n    }\n\n    this.context.registerConsumer(this);\n  }\n\n  getGSAP() {\n    return this.timeline;\n  }\n\n  addTarget(target: any) {\n    if (target !== null) {\n      this.targets.set(this.targets.size, target);\n    }\n  }\n\n  setTarget(key: string, target: any) {\n    if (target !== null) {\n      if (this.targets.has(key)) {\n        const targets = this.targets.get(key);\n        if (Array.isArray(targets)) {\n          this.targets.set(key, [...targets, ...target]);\n          return;\n        }\n      }\n      this.targets.set(key, target);\n    }\n  }\n\n  setTargets(targets: Targets) {\n    this.targets = targets;\n  }\n\n  getTargets() {\n    return this.targets;\n  }\n\n  cloneElement(child: any) {\n    return React.cloneElement(child, {\n      // @ts-ignore\n      [refOrInnerRef(child)]: target => this.addTarget(target),\n    });\n  }\n\n  renderTarget(target?: Target): ReactNode {\n    if (!target) {\n      return null;\n    }\n\n    // if is forwardRef clone and pass targets as ref\n    if (isForwardRef(target)) {\n      return <target.type ref={{ set: this.setTarget }} />;\n    }\n\n    // else iterate the first level of children and set targets\n    return (\n      <Fragment>\n        {/* First render the target */}\n        {React.Children.map<ReactElement, ReactElement>(target, child => {\n          if (isFragment(child)) {\n            return React.Children.map(child.props.children, fragmentChild => {\n              return this.cloneElement(fragmentChild);\n            });\n          }\n          return this.cloneElement(child);\n        })}\n      </Fragment>\n    );\n  }\n\n  render() {\n    let { target, children, wrapper } = this.props;\n\n    const renderedTarget = this.renderTarget(target);\n\n    let output = (\n      <Fragment>\n        {renderedTarget}\n        {children}\n      </Fragment>\n    );\n\n    if (wrapper) {\n      output = React.cloneElement(wrapper, [], output);\n    }\n\n    return this.renderWithProvider(output);\n  }\n}\n\nexport default Timeline;\n","import React from 'react';\nimport { gsap } from 'gsap';\nimport { nullishCoalescing } from '../helper';\nimport Provider from '../Provider';\n\nexport type RevealProps = {\n  children: React.ReactNode;\n  trigger: React.ReactElement | null;\n  repeat: boolean;\n  root: Element | null;\n  rootMargin: string;\n  threshold: number;\n};\n\nenum EntryState {\n  unknown,\n  entered,\n  exited,\n}\n\nclass Reveal extends Provider<RevealProps> {\n  static displayName = 'Reveal';\n\n  static defaultProps = {\n    trigger: null,\n    repeat: false,\n    root: null,\n    rootMargin: '0px',\n    threshold: 0.66,\n  };\n\n  timeline: any;\n  triggerRef: HTMLElement | null = null;\n  observer: IntersectionObserver | null = null;\n\n  init() {\n    this.createTimeline();\n    this.createIntersectionObserver();\n  }\n\n  kill() {\n    this.killTimeline();\n    this.killIntersectionObserver();\n  }\n\n  componentDidMount() {\n    this.init();\n  }\n\n  componentWillUnmount() {\n    this.kill();\n  }\n\n  componentDidUpdate(prevProps: RevealProps) {\n    const { children, trigger } = this.props;\n\n    // if children change create a new timeline\n    // TODO: replace easy length check with fast equal check\n    // TODO: same for props.target?\n    if (React.Children.count(prevProps.children) !== React.Children.count(children)) {\n      this.init();\n    }\n\n    if (prevProps.trigger !== trigger) {\n      this.init();\n    }\n  }\n\n  createTimeline() {\n    this.killTimeline();\n\n    // init timeline\n    this.timeline = gsap.timeline({\n      smoothChildTiming: true,\n      paused: true,\n    });\n\n    // add consumers\n    this.consumers.forEach(consumer => {\n      const { position } = consumer.props;\n      this.timeline.add(consumer.getGSAP().play(), nullishCoalescing(position, 0));\n    });\n  }\n\n  killTimeline() {\n    if (this.timeline) {\n      this.timeline.kill();\n    }\n  }\n\n  createIntersectionObserver() {\n    let { root, rootMargin, threshold } = this.props;\n\n    const options = {\n      root,\n      rootMargin,\n      threshold: [0, threshold],\n    };\n\n    this.observer = new IntersectionObserver(this.intersectionObserverCallback, options);\n\n    // It would be better if we wouldn't need an extra wrapper.\n    // But it can be problematic for example with a fadeInLeft animation\n    // were the element is out of the viewport in the initial state.\n    // In this case there wouldn't be an intersection..\n    if (!this.triggerRef) {\n      this.consumers.forEach(consumer => {\n        consumer.getTargets().forEach((target: any) => {\n          this.observer && this.observer.observe(target);\n        });\n      });\n    } else {\n      this.observer && this.observer.observe(this.triggerRef);\n    }\n  }\n\n  killIntersectionObserver() {\n    this.unobserveAll();\n    this.observer = null;\n  }\n\n  unobserveAll() {\n    if (this.observer) {\n      if (!this.triggerRef) {\n        this.consumers.forEach(consumer => {\n          consumer.getTargets().forEach((target: any) => {\n            this.observer && this.observer.unobserve(target);\n          });\n        });\n      } else {\n        this.observer && this.observer.unobserve(this.triggerRef);\n      }\n    }\n  }\n\n  intersectionObserverCallback = (entries: any) => {\n    let { repeat, threshold } = this.props;\n    let state: EntryState = EntryState.unknown;\n\n    for (const entry of entries) {\n      if (entry.isIntersecting && entry.intersectionRatio >= threshold) {\n        this.timeline.play();\n        state = EntryState.entered;\n        break;\n      } else if (!entry.isIntersecting) {\n        state = EntryState.exited;\n        break;\n      }\n    }\n\n    if (!repeat && state === EntryState.entered) {\n      this.killIntersectionObserver();\n    } else if (repeat && state === EntryState.exited) {\n      this.timeline.pause(0);\n    }\n  };\n\n  getGSAP() {\n    return this.timeline;\n  }\n\n  render() {\n    let { children, trigger } = this.props;\n\n    let output = trigger ? (\n      <trigger.type {...trigger.props} ref={(trigger: HTMLElement) => (this.triggerRef = trigger)}>\n        {children}\n      </trigger.type>\n    ) : (\n      children\n    );\n\n    return this.renderWithProvider(output);\n  }\n}\n\nexport default Reveal;\n","import React from 'react';\n\ntype SplitWordsProps = {\n  children: React.ReactNode;\n  wrapper: React.ReactElement;\n  delimiter?: string;\n};\n\ntype SplitCharsProps = {\n  children: React.ReactNode;\n  wrapper: React.ReactElement;\n};\n\nconst escapeRegExp = (regExp: string) => {\n  var specialChars = ['$', '^', '*', '(', ')', '+', '[', ']', '{', '}', '\\\\', '|', '.', '?', '/'];\n  var regex = new RegExp('(\\\\' + specialChars.join('|\\\\') + ')', 'g');\n  return regExp.replace(regex, '\\\\$1');\n};\n\nexport const SplitWords = React.forwardRef<any, SplitWordsProps>(\n  ({ children, wrapper, delimiter = ' ' }, ref) => {\n    if (typeof children !== 'string') {\n      throw new Error('SplitWords only accepts a string as child.');\n    }\n    const words = children.split(new RegExp(`(${escapeRegExp(delimiter)})`, 'g'));\n    return (\n      <>\n        {words.map((word: string, i: number) => {\n          if (delimiter === ' ' && word === delimiter) {\n            return <React.Fragment key={i}> </React.Fragment>;\n          }\n          return React.cloneElement(wrapper, { ref, key: i }, word);\n        })}\n      </>\n    );\n  }\n);\n\nexport const SplitChars = React.forwardRef<any, SplitCharsProps>(({ children, wrapper }, ref) => {\n  if (typeof children !== 'string') {\n    throw new Error('SplitLetters only accepts a string as child.');\n  }\n  return (\n    <>\n      {children\n        .split(\n          /(?=(?:[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]))/\n        )\n        .map((char: string, i: number) => {\n          // TODO: enhance check for space\n          if (char === ' ') {\n            return <React.Fragment key={i}> </React.Fragment>;\n          }\n          return React.cloneElement(wrapper, { ref, key: i }, char);\n        })}\n    </>\n  );\n});\n\nexport const SplitLetters = React.forwardRef((props: any, ref) => {\n  console.log('Deprecation warning: Use SplitChars instead of SplitLetters');\n  return <SplitChars {...props} ref={ref} />;\n});\n","import React from 'react';\nimport { PlayState } from './../types';\nimport { setPlayState } from './../helper';\nimport Provider from '../Provider';\n\ntype ControlsProps = {\n  playState?: PlayState;\n};\n\ntype ControlsState = {\n  totalProgress: number;\n  playState?: PlayState;\n  prevPlayState?: PlayState;\n};\n\nclass Controls extends Provider<ControlsProps, ControlsState> {\n  gsap: any;\n  slider: any;\n  sliderTouched: boolean = false;\n\n  state = {\n    totalProgress: 0,\n    playState: undefined,\n    prevPlayState: undefined,\n  };\n\n  containerStyle = {\n    backgroundColor: '#f0f0f0',\n    padding: '10px 10px 0 10px',\n    marginTop: '10px',\n    position: 'relative' as 'relative',\n    zIndex: 2,\n    fontFamily: 'verdana, sans-serif',\n    fontSize: '16px',\n    border: '1px solid #ccc',\n  };\n\n  buttonContainerStyle = {\n    margin: '0',\n    display: 'flex',\n    flexWrap: 'wrap' as 'wrap',\n    justifyContent: 'space-between',\n  };\n\n  buttonStyle = {\n    border: '1px solid #999',\n    backgroundColor: '#f0f0f0',\n    padding: '5px',\n    margin: '10px 10px 10px 0',\n    cursor: 'pointer',\n  };\n\n  sliderStyle = {\n    margin: '0',\n    width: '100%',\n  };\n\n  playStateStyle = {\n    color: '#999',\n    margin: '10px 0',\n    fontSize: '14px',\n  };\n\n  componentDidMount() {\n    if (this.consumers.length) {\n      this.gsap = this.consumers[0];\n\n      const gsap = this.gsap.getGSAP();\n\n      if (gsap) {\n        gsap.eventCallback('onUpdate', this.onUpdate);\n\n        if (this.props.playState) {\n          this.setPlayState(this.props.playState);\n        } else {\n          // get child initial state\n          if (gsap.paused()) {\n            this.setPlayState(PlayState.pause);\n          } else if (gsap.reversed()) {\n            this.setPlayState(PlayState.reverse);\n          } else {\n            this.setPlayState(PlayState.play);\n          }\n        }\n\n        const totalProgress = gsap.totalProgress();\n        this.slider.value = totalProgress * 100;\n      }\n    }\n  }\n\n  componentDidUpdate() {\n    this.onUpdate();\n  }\n\n  onUpdate = () => {\n    if (this.gsap && this.slider && !this.sliderTouched) {\n      const totalProgress = this.gsap.getGSAP().totalProgress();\n      this.slider.value = totalProgress * 100;\n    }\n  };\n\n  onChange = (event: any) => {\n    if (this.gsap && this.gsap.getGSAP()) {\n      this.gsap.getGSAP().totalProgress(event.target.value / 100);\n    }\n  };\n\n  setPlayState = (state: PlayState) => {\n    this.setState(prevState => {\n      return {\n        playState: state,\n        prevPlayState: prevState.playState,\n      };\n    });\n  };\n\n  getControls = (_totalProgress: any, playState: PlayState | undefined) => (\n    <div style={this.containerStyle}>\n      <input\n        ref={el => (this.slider = el)}\n        type=\"range\"\n        style={this.sliderStyle}\n        step=\"0.001\"\n        onChange={e => this.onChange(e)}\n        onMouseDown={() => (this.sliderTouched = true)}\n        onMouseUp={() => (this.sliderTouched = false)}\n      />\n      <div style={this.buttonContainerStyle}>\n        <div>\n          <button\n            type=\"button\"\n            style={this.buttonStyle}\n            onClick={() => this.setPlayState(PlayState.play)}\n          >\n            Play\n          </button>\n          <button\n            type=\"button\"\n            style={this.buttonStyle}\n            onClick={() => this.setPlayState(PlayState.reverse)}\n          >\n            Reverse\n          </button>\n          <button\n            type=\"button\"\n            style={this.buttonStyle}\n            onClick={() => this.setPlayState(PlayState.pause)}\n          >\n            Pause\n          </button>\n          <button\n            type=\"button\"\n            style={this.buttonStyle}\n            onClick={() => this.setPlayState(PlayState.stop)}\n          >\n            Stop\n          </button>\n        </div>\n        <span style={this.playStateStyle}>{playState}</span>\n      </div>\n    </div>\n  );\n\n  render() {\n    const { children } = this.props;\n    const { totalProgress, playState, prevPlayState } = this.state;\n\n    if (this.gsap) {\n      setPlayState(playState, prevPlayState, this.gsap.getGSAP());\n    }\n\n    return this.renderWithProvider(\n      <div>\n        {children}\n        {this.getControls(totalProgress, playState)}\n      </div>\n    );\n  }\n}\n\nexport default Controls;\n"],"names":["PlayState","setPlayState","playState","prevPlayState","tween","play","pause","reverse","restart","stop","getTweenFunction","targets","props","duration","from","to","stagger","progress","totalProgress","disabled","onCompleteAll","onCompleteAllParams","onCompleteAllScope","onStartAll","position","vars","tweenFunction","gsap","fromTo","Array","isArray","forEach","t","paused","timeline","tweens","smoothChildTiming","onComplete","onCompleteParams","onCompleteScope","onStart","isEqual","obj1","obj2","JSON","stringify","refOrInnerRef","child","type","$$typeof","toString","styledComponentId","nullishCoalescing","value","ifNullish","Context","React","createContext","registerConsumer","Provider","consumers","bind","getContextValue","renderWithProvider","consumer","push","output","Component","_interpolate","_getProp","_getGSAP","window","registerPlugin","getDistance","p1","p2","Math","sqrt","pow","x","y","getCircleLength","el","PI","parseFloat","getAttribute","getRectLength","getLineLength","getPolylineLength","points","totalLength","previousPos","undefined","i","numberOfItems","currentPos","getItem","getPolygonLength","getPathLength","hasAttribute","getTotalLength","d","pathString","replace","paths","split","filter","path","map","length","maxLength","pathElement","document","createElementNS","setAttribute","max","tagName","toLowerCase","SvgDrawPlugin","version","name","register","core","Plugin","propTween","utils","interpolate","getProperty","init","target","_tween","index","lengthParam","offsetParam","data","strokeDashoffset","strokeDasharray","render","_format","CountPlugin","parseInt","inputValue","format","initialCount","innerText","count","Tween","previousPlayState","componentDidMount","createTween","componentWillUnmount","kill","getSnapshotBeforeUpdate","componentDidUpdate","prevProps","children","wrapper","onlyInvalidateTo","Children","getChildren","progressTmp","invalidate","delay","context","getGSAP","setGSAP","addTarget","getTargets","Fragment","cloneElement","Timeline","Map","setTarget","createTimeline","labels","label","addLabel","get","values","add","set","size","key","has","setTargets","renderTarget","isForwardRef","ref","isFragment","fragmentChild","renderedTarget","EntryState","Reveal","entries","repeat","threshold","state","unknown","entry","isIntersecting","intersectionRatio","entered","exited","killIntersectionObserver","createIntersectionObserver","killTimeline","trigger","root","rootMargin","options","observer","IntersectionObserver","intersectionObserverCallback","triggerRef","observe","unobserveAll","unobserve","escapeRegExp","regExp","specialChars","regex","RegExp","join","SplitWords","forwardRef","delimiter","Error","words","word","SplitChars","char","SplitLetters","console","log","Controls","backgroundColor","padding","marginTop","zIndex","fontFamily","fontSize","border","margin","display","flexWrap","justifyContent","cursor","width","color","slider","sliderTouched","event","setState","prevState","_totalProgress","style","containerStyle","sliderStyle","step","onChange","e","onMouseDown","onMouseUp","buttonContainerStyle","buttonStyle","onClick","playStateStyle","eventCallback","onUpdate","reversed","getControls"],"mappings":"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"}