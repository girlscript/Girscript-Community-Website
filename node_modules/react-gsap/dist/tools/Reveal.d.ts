import React from 'react';
import Provider from '../Provider';
export declare type RevealProps = {
    children: React.ReactNode;
    trigger: React.ReactElement | null;
    repeat: boolean;
    root: Element | null;
    rootMargin: string;
    threshold: number;
};
declare class Reveal extends Provider<RevealProps> {
    static displayName: string;
    static defaultProps: {
        trigger: null;
        repeat: boolean;
        root: null;
        rootMargin: string;
        threshold: number;
    };
    timeline: any;
    triggerRef: HTMLElement | null;
    observer: IntersectionObserver | null;
    init(): void;
    kill(): void;
    componentDidMount(): void;
    componentWillUnmount(): void;
    componentDidUpdate(prevProps: RevealProps): void;
    createTimeline(): void;
    killTimeline(): void;
    createIntersectionObserver(): void;
    killIntersectionObserver(): void;
    unobserveAll(): void;
    intersectionObserverCallback: (entries: any) => void;
    getGSAP(): any;
    render(): JSX.Element;
}
export default Reveal;
