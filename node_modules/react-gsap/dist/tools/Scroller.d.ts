import React from 'react';
import Provider from '../Provider';
export declare enum TriggerPosition {
    top = "top",
    bottom = "bottom"
}
export declare type ScrollerProps = {
    children: (progress: number) => React.ReactNode;
    heightVh: number;
    resolution: number;
    triggerPosition: TriggerPosition;
};
declare type ScrollerState = {
    progress: number;
};
declare class Scroller extends Provider<ScrollerProps, ScrollerState> {
    static displayName: string;
    static defaultProps: {
        heightVh: number;
        resolution: number;
        triggerPosition: TriggerPosition;
    };
    state: ScrollerState;
    timeline: any;
    heights: number[];
    targetRefs: HTMLElement[];
    observer: IntersectionObserver | null;
    constructor(props: ScrollerProps);
    getTargetHeights(heightVh: number): number[];
    componentDidMount(): void;
    componentWillUnmount(): void;
    getSnapshotBeforeUpdate(): null;
    componentDidUpdate(prevProps: ScrollerProps): void;
    createTimeline(): void;
    createIntersectionObserver(): void;
    unobserveAll(): void;
    intersectionObserverCallback: (entries: any) => void;
    getTotalProgress(progresses: number[]): number;
    emptyProgresses(progresses: number[]): boolean;
    getGSAP(): any;
    render(): JSX.Element;
}
export default Scroller;
