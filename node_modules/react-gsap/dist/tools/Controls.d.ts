/// <reference types="react" />
import { PlayState } from './../types';
import Provider from '../Provider';
declare type ControlsProps = {
    playState?: PlayState;
};
declare type ControlsState = {
    totalProgress: number;
    playState?: PlayState;
    prevPlayState?: PlayState;
};
declare class Controls extends Provider<ControlsProps, ControlsState> {
    gsap: any;
    slider: any;
    sliderTouched: boolean;
    state: {
        totalProgress: number;
        playState: undefined;
        prevPlayState: undefined;
    };
    containerStyle: {
        backgroundColor: string;
        padding: string;
        marginTop: string;
        position: "relative";
        zIndex: number;
        fontFamily: string;
        fontSize: string;
        border: string;
    };
    buttonContainerStyle: {
        margin: string;
        display: string;
        flexWrap: "wrap";
        justifyContent: string;
    };
    buttonStyle: {
        border: string;
        backgroundColor: string;
        padding: string;
        margin: string;
        cursor: string;
    };
    sliderStyle: {
        margin: string;
        width: string;
    };
    playStateStyle: {
        color: string;
        margin: string;
        fontSize: string;
    };
    componentDidMount(): void;
    componentDidUpdate(): void;
    onUpdate: () => void;
    onChange: (event: any) => void;
    setPlayState: (state: PlayState) => void;
    getControls: (_totalProgress: any, playState: PlayState | undefined) => JSX.Element;
    render(): JSX.Element;
}
export default Controls;
